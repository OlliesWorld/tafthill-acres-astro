---
import { PortableText as PortableTextInternal } from 'astro-portabletext';
const { portableText } = Astro.props;
import type {
  PortableTextBlock,
  PortableTextSpan
} from '@portabletext/types';

const headingSpan: PortableTextSpan = {
  _type: 'span',
  _key: '5p4n',
  text: 'A simple Portable Text heading block',
  marks: [],
};

const myBlocks: PortableTextBlock[] = [
  {
    _type: 'block',
    _key: 'abc123',
    style: 'h1',
    children: [headingSpan],
    markDefs: [],
  },
  {
    _type: 'block',
    _key: 'xyz987',
    style: 'normal',
    children: [
      { _type: 'span', _key: 'c7', text: 'Check out the ', marks: [] },
      { _type: 'span', _key: 'x2', text: 'TypeScript definitions', marks: ['m4hl1nk'] },
      { _type: 'span', _key: 'u5', text: ' if you are using TS!', marks: [] }
    ],
    markDefs: [
      {
        _key: 'm4hl1nk',
        _type: 'link',
        href: 'https://github.com/portabletext/types'
      }
    ],
  },
];
---

<!-- Ensure portableText is passed correctly -->
<PortableTextInternal value={portableText || myBlocks} />