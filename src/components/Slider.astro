---
interface CardData {
  text: string;
  author: string;
  image: string;
}

const { cardsData } = Astro.props;

// Log the cardsData to see if the data is coming through correctly
// console.log('cardsData:', cardsData);
---

<div class="container">
    <div class="slide">
        {cardsData.map((card: CardData, index: number) => {
            // Log each card's name and quote to verify the data
            // console.log('Card:', card);
            return (
                <div class="item" style={`background-image: url(${card.image});`}>
                    <div class="content bg-black p-4">
                        <div class="des">{card.text}</div>
                        <div class="name ">~ {card.author}</div>
                    </div>
                </div>
            );
        })}
    </div>

    <div class="button">
        <button class="prev"><i class="fa-solid fa-arrow-left"></i></button>
        <button class="next"><i class="fa-solid fa-arrow-right"></i></button>
    </div>
</div>

<style>
/* Your existing CSS styles */
.container {
    margin: 0 auto;
    width: 1000px;
    height: 600px;
    background: #f5f5f5;
    box-shadow: 0 30px 50px #dbdbdb;
    position: relative;
    top: 0;
    left: 0;
    transform: none;
}

.container .slide .item {
    width: 200px;
    height: 300px;
    position: absolute;
    top: 50%;
    transform: translate(0, -50%);
    border-radius: 20px;
    box-shadow: 0 30px 50px #505050;
    background-position: 50% 50%;
    background-size: cover;
    display: inline-block;
    transition: 0.5s;
}

.container .slide .item.active {
    width: 100%;
    height: 100%;
}

.slide .item:nth-child(1),
.slide .item:nth-child(2) {
    top: 0;
    left: 0;
    transform: translate(0, 0);
    border-radius: 0;
    width: 100%;
    height: 100%;
}

.slide .item:nth-child(3) {
    left: 50%;
    width: 100%;
    height: 100%;
}

.slide .item:nth-child(4) {
    left: calc(50% + 220px);
}

.slide .item:nth-child(5) {
    left: calc(50% + 440px);
}

.slide .item:nth-child(n + 6) {
    left: calc(50% + 660px);
    opacity: 0;
}

.item .content {
    position: absolute;
    top: 50%;
    left: 100px;
    width: 300px;
    text-align: left;
    color: #eee;
    transform: translate(0, -50%);
    font-family: system-ui;
    display: none;
    background-color: rgba(0, 0, 0, 0.5);
}

.slide .item.active .content {
    display: block;
}

.content .name {
    font-size: 40px;
    text-transform: uppercase;
    font-weight: bold;
    opacity: 0;
    animation: animate 1s ease-in-out 1 forwards;
}

.content .des {
    margin-top: 10px;
    margin-bottom: 20px;
    opacity: 0;
    animation: animate 1s ease-in-out 0.3s 1 forwards;
}

.content button {
    padding: 10px 20px;
    border: none;
    cursor: pointer;
    opacity: 0;
    animation: animate 1s ease-in-out 0.6s 1 forwards;
}

@keyframes animate {
    from {
        opacity: 0;
        transform: translate(0, 100px);
        filter: blur(33px);
    }

    to {
        opacity: 1;
        transform: translate(0);
        filter: blur(0);
    }
}

.button {
    width: 100%;
    text-align: center;
    position: absolute;
    bottom: 20px;
}

.button button {
    width: 40px;
    height: 35px;
    border-radius: 8px;
    border: none;
    cursor: pointer;
    margin: 0 5px;
    border: 1px solid #fff;
    color: #fff;
    transition: 0.3s;
}

.button button:hover {
    background: #ababab;
    color: #fff;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const initializeSlider = () => {
        console.log("initializeSlider function called");

        const next = document.querySelector('.next');
        const prev = document.querySelector('.prev');

        console.log("Next button:", next);
        console.log("Prev button:", prev);

        if (next && prev) {
            next.addEventListener('click', function() {
                console.log("Next button clicked");
                const items = document.querySelectorAll('.item');
                const slide = document.querySelector('.slide');
                if (slide) {
                    slide.appendChild(items[0]);
                    updateActiveSlide();
                }
            });

            prev.addEventListener('click', function() {
                console.log("Prev button clicked");
                const items = document.querySelectorAll('.item');
                const slide = document.querySelector('.slide');
                if (slide) {
                    slide.prepend(items[items.length - 1]);
                    updateActiveSlide();
                }
            });
        }
    };

    const updateActiveSlide = () => {
        const items = document.querySelectorAll('.item');
        items.forEach((item, index) => {
            if (index === 1) {
                item.classList.add('active');
            } else {
                item.classList.remove('active');
            }
        });
    };

    initializeSlider();
    updateActiveSlide();
});
</script>