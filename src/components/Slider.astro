---
interface CardData {
    text: string;
    author: string;
    image: string;
}

const { cardsData } = Astro.props;

// Log the cardsData to see if the data is coming through correctly
// console.log('cardsData:', cardsData);
---

<div class="container">
    <div class="slide">
        {
            cardsData.map((card: CardData, index: number) => {
                // Log each card's name and quote to verify the data
                // console.log('Card:', card);
                return (
                    <div
                        class="item"
                        style={`background-image: url(${card.image});`}
                    >
                        <div class="content bg-black p-4">
                            <div class="description">{card.text}</div>
                            <div class="name">{card.author}</div>
                        </div>
                    </div>
                );
            })
        }
    </div>

    <div class="button">
        <button class="prev">
            <div class="arrow">
                <span class="default">&#x21dc;</span>
                <span class="active">&#x2190;</span>
            </div>
        </button>
        <button class="next">
            <div class="arrow">
                <span class="default">&#x21dd;</span>
                <span class="active">&#x2192;</span>
            </div>
        </button>
    </div>
</div>
<style>
    /* Your existing CSS styles */
    .container {
        margin: 0 auto;
        width: 100%;
        max-width: 1000px;
        height: 600px;
        background: #f5f5f5;
        box-shadow: 0 30px 50px #dbdbdb;
        position: relative;
        top: 0;
        left: 0;
        transform: none;
    }

    .container .slide .item {
        width: 200px;
        height: 300px;
        position: absolute;
        top: 50%;
        transform: translate(0, -50%);
        border-radius: 20px;
        box-shadow: 0 30px 50px #505050;
        background-position: 50% 50%;
        background-size: cover;
        display: inline-block;
        transition: 0.5s;
    }
    @media (max-width: 1024px) {
        .container {
            height: 90vh;
            width: 90%;
        }
        .container .slide .item:not(.active) {
            display: none;
        }
    }
    @media (max-width: 768px) {
        .container {
            height: 80vh;
        }
    }

    .container .slide .item.active {
        width: 100%;
        height: 100%;
    }

    .slide .item:nth-child(1),
    .slide .item:nth-child(2) {
        top: 0;
        left: 0;
        transform: translate(0, 0);
        border-radius: 0;
        width: 100%;
        height: 100%;
    }

    .slide .item:nth-child(3) {
        left: 50%;
        width: 100%;
        height: 100%;
    }

    .slide .item:nth-child(4) {
        left: calc(50% + 220px);
    }

    .slide .item:nth-child(5) {
        left: calc(50% + 440px);
    }

    .slide .item:nth-child(n + 6) {
        left: calc(50% + 660px);
        opacity: 0;
    }

    .item .content {
        position: absolute;
        top: 50%;
        left: 100px;
        width: 300px;
        text-align: left;
        color: #eee;
        transform: translate(0, -50%);
        font-family: system-ui;
        display: none;
        background-color: rgba(0, 0, 0, 0.5);
        padding: 20px;
        border-radius: 8px;
    }

    @media (max-width: 768px) {
        .item .content {
            left: 50%;
            transform: translate(-50%, -50%);
            width: 100%;
            max-width: 800px;
            max-height: 800px;
        }
    }

    .slide .item.active .content {
        display: block;
    }

    .content .name {
        font-size: 40px;
        text-transform: uppercase;
        font-weight: bold;
        opacity: 0;
        animation: animate 1s ease-in-out 1 forwards;
    }

    .content .description {
        margin-top: 10px;
        margin-bottom: 20px;
        opacity: 0;
        animation: animate 1s ease-in-out 0.3s 1 forwards;
        @media (max-width: 768px) {
            display: -webkit-box;
            -webkit-line-clamp: 5;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }

    .content button {
        padding: 10px 20px;
        border: none;
        cursor: pointer;
        opacity: 0;
        animation: animate 1s ease-in-out 0.6s 1 forwards;
    }

    @keyframes animate {
        from {
            opacity: 0;
            transform: translate(0, 100px);
            filter: blur(33px);
        }

        to {
            opacity: 1;
            transform: translate(0);
            filter: blur(0);
        }
    }

    .button {
        width: 100%;
        text-align: center;
        position: absolute;
        bottom: 20px;
        display: flex;
        justify-content: center;
        gap: 20px;
    }

    @media (max-width: 768px) {
        .button {
            bottom: 20px;
            position: absolute;
            width: 100%;
            z-index: 10;
        }
    }

    .button button {
        width: 50px;
        height: 50px;
        border: none;
        border-radius: 50%;
        cursor: pointer;
        transition: 0.3s;
        background: rgba(0, 0, 0, 0.5);
        position: relative;
        /* Add transform properties for animation */
        transform: scale(1);
        box-shadow: 0 3px 5px rgba(0, 0, 0, 0.2);
    }

    /* Add hover state */
    .button button:hover {
        background: rgba(0, 0, 0, 0.7);
        transform: scale(1.05);
    }

    /* Add active state for the click animation */
    .button button:active {
        transform: scale(0.95);
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
        background: rgba(0, 0, 0, 0.8);
    }

    /* Optional: Add animation for the arrow as well */
    .arrow {
        position: absolute;
        left:10px;
        top: 0;
        color: white;
        font-size: 50px;
        line-height: 1;
        transition: 0.2s ease;
    }

    .arrow .active {
        display: none;
    }
    .button button:active .arrow .default {
        display: none;
    }

    .button button:active .arrow .active {
        display: inline;
        margin-left: -10px;
    }

    /* Hover effect */
    .button button:hover .arrow {
        color: #fff;
        /* font-size: 55px; */
    }

    /* Remove the arrow-top and arrow-bottom styles since they're no longer needed */
</style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const initializeSlider = () => {
            console.log("initializeSlider function called");

            const next = document.querySelector(".next");
            const prev = document.querySelector(".prev");

            console.log("Next button:", next);
            console.log("Prev button:", prev);

            if (next && prev) {
                next.addEventListener("click", function () {
                    console.log("Next button clicked");
                    const items = document.querySelectorAll(".item");
                    const slide = document.querySelector(".slide");
                    if (slide) {
                        slide.appendChild(items[0]);
                        updateActiveSlide();
                    }
                });

                prev.addEventListener("click", function () {
                    console.log("Prev button clicked");
                    const items = document.querySelectorAll(".item");
                    const slide = document.querySelector(".slide");
                    if (slide) {
                        slide.prepend(items[items.length - 1]);
                        updateActiveSlide();
                    }
                });
            }
        };

        const updateActiveSlide = () => {
            const items = document.querySelectorAll(".item");
            items.forEach((item, index) => {
                if (index === 1) {
                    item.classList.add("active");
                } else {
                    item.classList.remove("active");
                }
            });
        };

        initializeSlider();
        updateActiveSlide();
    });
</script>
