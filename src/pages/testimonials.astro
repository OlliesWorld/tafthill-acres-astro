---
import type { ImageAsset } from "@sanity/types";
import Layout from "../layouts/Layout.astro";
// import Card from '../components/Card.astro';
import Slider from "../components/Slider.astro";
import { urlFor } from "../utils/image";
import { loadQuery } from "../../sanity/lib/load-query";
// import { decodeHtmlEntities, cleanText } from "../utils/textUtils";

interface Testimonial {
  slug: string;
  title?: string;
  quotes?: { [key: string]: string };
  names?: { [key: string]: string };
  images?: { [key: string]: ImageAsset };
}

const response = await loadQuery<Testimonial[]>({
  query: `*[_type == 'testimonials'] | order(_createdAt desc) {
    slug,
    title,
    "quotes": {
      "quote1": quote,
      "quote2": quote2,
      "quote3": quote3,
      "quote4": quote4,
      "quote5": quote5,
      "quote6": quote6,
      "quote7": quote7,
      "quote8": quote8,
      "quote9": quote9,
      "quote10": quote10,
      "quote11": quote11,
      "quote12": quote12,
      "quote13": quote13,
      "quote14": quote14,
      "quote15": quote15,
      "quote16": quote16
    },
    "names": {
      "name1": name,
      "name2": name2,
      "name3": name3,
      "name4": name4,
      "name5": name5,
      "name6": name6,
      "name7": name7,
      "name8": name8,
      "name9": name9,
      "name10": name10,
      "name11": name11,
      "name12": name12,
      "name13": name13,
      "name14": name14,
      "name15": name15,
      "name16": name16
    },
    "images": {
      "image1": image1,
      "image2": image2,
      "image3": image3,
      "image4": image4,
      "image5": image5,
      "image6": image6,
      "image7": image7,
      "image8": image8,
      "image9": image9,
      "image10": image10,
      "image11": image11,
      "image12": image12,
      "image13": image13,
      "image14": image14,
      "image15": image15,
      "image16": image16
    }
  }`,
});

const testimonials: Testimonial = response.data[0]; // Access the first testimonial object

// Check if testimonials.quotes exists and is an object
if (!testimonials.quotes || typeof testimonials.quotes !== 'object') {
  console.error('No quotes found in testimonials');
}

const cardsData = testimonials.quotes && typeof testimonials.quotes === 'object' ? Object.keys(testimonials.quotes)
  .filter((quoteKey) => testimonials.quotes && testimonials.quotes[quoteKey]) // Filter out empty quotes
  .map((quoteKey) => {
    const index = parseInt(quoteKey.replace('quote', '')) - 1; // Get the index from the quote key
    return {
      id: testimonials.slug || "unknown-id", // Use slug or a default id
      text: testimonials.quotes ? testimonials.quotes[quoteKey] || "No quote available" : "No quote available",
      author: testimonials.names ? testimonials.names[`name${index + 1}`] || "Unknown" : "Unknown", // Match name with quote
      image: testimonials.images && testimonials.images[`image${index + 1}`] ? urlFor(testimonials.images[`image${index + 1}`]).url() : "path/to/default/image.jpg" // Match image with quote
    };
  }) : [];

---

<Layout title="Testimonials | Taft Hill Acres">
  <div class="container mx-auto my-8">
    <h1 class="text-darktan text-5xl text-center my-8 font-extrabold">What Our Clients Say</h1>
    <div class="mt-42">
      <Slider {cardsData} />
    </div>
  </div>
</Layout>