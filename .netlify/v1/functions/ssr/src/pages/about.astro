---
import { PortableText } from "astro-portabletext";
import type { PortableTextBlock } from "@portabletext/types";
import type { ImageAsset } from "@sanity/types";
import Layout from "../layouts/Layout.astro";
import { urlFor } from "../utils/image";
import { loadQuery } from '../../sanity/lib/load-query';
import { decodeHtmlEntities, cleanText } from "../utils/textUtils";

interface About {
  _type: "about";
  title?: string;
  subtitle?: string;
  body?: PortableTextBlock[];
  mainImage?: ImageAsset;
  gallery: ImageAsset[];
  title2?: string;
  subtitle2?: string;
  body2?: PortableTextBlock[];
}

const result = await loadQuery<{
  title?: string,
  subtitle?: string,
  body?: string,
  mainImage?: string,
  gallery?: string,
  title2?: string,
  subtitle2?: string,
  body2?: string
}>({
  query: `*[_type == 'about'] | order(_createdAt desc) {
    title,
    subtitle,
    body,
    mainImage,
    gallery,
    title2,
    subtitle2,
    body2
  }[0]`,
});

// console.log('result', result);
// console.log('result.data', result.data);
const about = result && result.data ? {
  title: typeof result.data.title === 'string' ? cleanText(decodeHtmlEntities(result.data.title)) : '',
  subtitle: typeof result.data.subtitle === 'string' ? cleanText(decodeHtmlEntities(result.data.subtitle)) : '',
  body: Array.isArray(result.data.body) ? result.data.body : [],
  title2: typeof result.data.title2 === 'string' ? cleanText(decodeHtmlEntities(result.data.title2)) : '',
  subtitle2: typeof result.data.subtitle2 === 'string' ? cleanText(decodeHtmlEntities(result.data.subtitle2)) : '',
  body2: Array.isArray(result.data.body2) ? result.data.body2 : [],
  mainImage: result.data.mainImage || '',
  gallery: Array.isArray(result.data.gallery) ? result.data.gallery : [] // Ensure mainImage is included
} : {
  title: '',
  subtitle: '',
  body: [],
  title2: '',
  subtitle2: '',
  body2: [],
  mainImage: '',
  gallery: []
};
// console.log('about', about);
---

<Layout title="Taft Hill Acres | About">
  <div class="text-center h-full w-full md:h-3/4 md:w-3/4 m-auto my-8">
    <div class="m-auto text-center">
      <h1 class="lg:w-5/6 bg-darktan text-4xl text-white p-6 m-auto">About Taft Hill Acres</h1>
      {about.mainImage && (
        <img
          class="z-10 object-cover w-full lg:w-5/6 m-auto"
          src={urlFor((about.mainImage as any).asset).url()}
          alt="Bridge with barn and arena in the background"
        />
      ) }
    </div>
    <div class="lg:w-3/4 bg-darktan mx-auto p-4 lg:p-12">
      <h2 class="text-left text-black font-extrabold text-4xl">{about.subtitle}</h2>
      {about.title && <h2 class="text-green text-5xl text-center mb-4">{about.title}</h2>}
      <div class="text-white text-left text-2xl">
        <PortableText value={about.body} />
      </div>
    </div>
    <div class="lg:w-3/4 bg-darktan mx-auto my-8 p-4 lg:p-12">
      <h2 class="text-left text-black font-extrabold text-4xl">{about.subtitle2}</h2>
      {about.title2 && <h2 class="text-green text-5xl text-center mb-4">{about.title2}</h2>}
      <div class="text-white text-left text-2xl">
        <PortableText value={about.body2} />
      </div>
    </div>
    <div class="lg:columns-3 sm:columns-2 gap-4">
      {about.gallery.map((item) => (
        <div class="py-2 px-1 inline-block w-full group">
          <img src={urlFor(item).url()} alt={item.alt || ""} loading="lazy" />
        </div>
      ))}
    </div>
  </div>
</Layout>